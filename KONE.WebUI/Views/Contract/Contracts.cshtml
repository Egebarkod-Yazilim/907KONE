
@{
    Layout = "_Layout";
}
@await Html.PartialAsync("_Breadcrumb", new KONE.KOne.WebUI.Models.BreadCrumb.BreadCrumbViewModel
{
    HeaderTitle = "Sözleşmeler",
    PageNames = new List<string>() {"Anasayfa", "Index", "Sözleşmeler" },
    Url = "/Admin/Home/Index"
})

<div class="row">
    <div class="col-md-12">
        <div class="card custom-card">
            <div class="card-header justify-content-between">
                <div class="card-title">
                     Sözleşmeler
                </div>
                <div class="d-flex flex-wrap gap-2">
                    <a href="/CurrentCard/AddOrUpdateCurrentCard" class="btn btn-blue-knfrt"><span class="ri-refresh-line"></span> Entegre Eşle</a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="contractsDataTable" class="table table-bordered text-nowrap w-100">
                        <thead>
                            <tr>
                                <th class="nonsearchable" style="width:10px;">
                                    <div class="form-check form-check-md d-flex align-items-center">
                                        <input class="form-check-input" type="checkbox" value="" id="checkebox-md">
                                    </div>
                                </th>
                                <th class="nonsearchable">#</th>
                                <th>Sözleşme No</th>
                                <th>Cari</th>
                                <th>Tarih</th>
                                <th>Geçerlilik Başlangıç Tarihi</th>
                                <th>Geçerlilik Bitiş Tarihi</th>
                                <th>Materyal Kodu</th>
                                <th>Sözleşme Miktarı</th>
                                <th>Bölge Kodu</th>
                                <th>Sözleşme Durumu</th>
                                <th>Aktif Durum</th>
                                <th class="nonsearchable">İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{ 
    <script>
        var datatable = $('#contractsDataTable').DataTable({
            "orderCellsTop": true,
            "fixedHeader": true,
            "pageLength": 25,
            "pagingType": "full_numbers", // Tüm sayfaları göster
            "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "Tümü"]],
            "initComplete": function (settings, json) {
                applyRowDetails();
            },
            "drawCallback": function (settings) {
                applyRowDetails();
            },
            "columnDefs": [
                {
                    "targets": [0],
                    "render": function (data, type, row, meta) {
                        return '<div class="hstack gap-2">' +
                            '<button class="btn btn-icon btn-wave waves-effect waves-light btn-sm btn-primary-light details-control"><i class="ri-edit-line" data-bs-toggle="tooltip" data-bs-placement="top" title="Detay Göster"></i></button>' +
                            '</div>';
                    }
                },
                {
                    "targets": [12],
                    "render": function (data, type, row, meta) {
                        return '<div class="hstack gap-2">' +
                            '<a aria-label="anchor" href="/CurrentCard/AddOrUpdateCurrentCard/' + row.id + '" class="btn btn-icon btn-wave waves-effect waves-light btn-sm btn-primary-light"><i class="ri-edit-line" data-bs-toggle="tooltip" data-bs-placement="top" title="Cari Detay"></i></a>' +
                            '<a aria-label="anchor" href="/CurrentCard/CurrentCardSummary/" class="btn btn-icon btn-wave waves-effect waves-light btn-sm btn-danger-light" data-bs-toggle="tooltip" data-bs-placement="top" title="Cari Kart Ozeti"><i class="ri-file-edit-fill"></i>></a>' +
                            '<a aria-label="anchor" href="/CurrentCard/CurrentLandList/' + row.id + '" class="btn btn-icon btn-wave waves-effect waves-light btn-sm btn-success-light" data-bs-toggle="tooltip" data-bs-placement="top" title="Inaktif Et"><i class="ri-check-double-line"></i></a>' +
                            '</div>';
                    }
                },
            ],
            language: {
                "url": "https://cdn.datatables.net/plug-ins/1.12.0/i18n/tr.json"
            }, layout: {
                topStart: {
                    "buttons": [
                        {
                            extend: 'colvis',
                            columns: ':not(.noVis)',
                            popoverTitle: 'Sütunlar'
                        },
                        {
                            extend: 'excel',
                            exportOptions: {
                                columns: ':visible' // Sadece görünür sütunları dışa aktar
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: 'PDF',
                            exportOptions: {
                                columns: ':visible'
                            },
                            customize: function (doc) {
                                doc.pageSize = 'A3'; // PDF boyutunu A3 olarak ayarla
                                doc.defaultStyle.fontSize = 10; // Yazı tipi boyutunu küçült
                            }
                        },
                        {
                            extend: 'csv',
                            exportOptions: {
                                columns: ':visible' // Sadece görünür sütunları dışa aktar
                            }
                        }
                    ]
                }
            },
            "buttonsDom": {
                "button": {
                    "tag": "button",
                    "className": "btn btn-outline-secondary"
                },
                "buttonLiner": {
                    "tag": null
                }
            },
            language: {
                buttons: {
                    colvis: 'Sütunları Göster/Gizle' // Buton metnini burada da ekleyebilirsiniz
                }
            },
            buttons: [
                {
                    extend: 'colvis',
                    text: 'Sütunları Göster/Gizle', // Buton metnini buraya ekliyoruz
                    collectionLayout: 'fixed two-column'
                }
            ]
        });

        $('#contractsDataTable thead th').each(function (i) {
            var title = $(this).text();
            var classList = $(this).attr('class'); // Öğenin sınıf listesini al

            if (classList && classList.indexOf('nonsearchable') !== -1) {
                $(this).text(title);
            } else {
                $(this).html('<input type="text" class="form-control rounded-pill" placeholder="' + title + '" />');

                $('input', this).on('keyup change', function () {
                    if (datatable.column(i).search() !== this.value) {
                        datatable
                            .column(i)
                            .search(this.value)
                            .draw();
                    }
                });
            }
        });

        // Rastgele isim oluşturma fonksiyonu
        function getRandomName() {
            var names = ['Ahmet', 'Mehmet', 'Ayşe', 'Fatma', 'Mustafa', 'Zeynep', 'Emir', 'Aslı', 'Can', 'İpek'];
            return names[Math.floor(Math.random() * names.length)];
        }

        // Rastgele harf/sayı dizisi oluşturma fonksiyonu
        function getRandomString(length) {
            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var result = '';
            for (var i = 0; i < length; i++) {
                result += characters.charAt(Math.floor(Math.random() * characters.length));
            }
            return result;
        }

        // Rastgele tarih oluşturma fonksiyonu
        function getRandomDate() {
            var year = 2024;
            var month = Math.floor(Math.random() * 12) + 1;
            var day = Math.floor(Math.random() * 28) + 1; // Şubat ayı için sadece
            return year + '-' + (month < 10 ? '0' + month : month) + '-' + (day < 10 ? '0' + day : day);
        }

        // Rastgele veri oluşturma fonksiyonu
        function getRandomData() {
            var status = Math.random();
            var statusHtml;
            if (status < 0.3) {
                statusHtml = '<span class="badge bg-primary-transparent"><i class="ri-check-line"></i> Sözleşme Yapıldı</span>';
            } else if (status < 0.6) {
                statusHtml = '<span class="badge bg-warning-transparent"><i class="ri-time-line"></i> Bekliyor</span>';
            } else {
                statusHtml = '<span class="badge bg-success-transparent"><i class="ri-close-line"></i> Sözleşme Tamamlandı</span>';
            }

            return {
                sozlesmeNo: getRandomString(3).toUpperCase() + Math.floor(Math.random() * 1000) + 1,
                cari: getRandomName(),
                tarih: getRandomDate(),
                baslangicTarih: getRandomDate(),
                bitisTarih: getRandomDate(),
                materyalKodu: 'MK-' + getRandomString(3).toUpperCase() + Math.floor(Math.random() * 100) + 1,
                sozlesmeMiktari: Math.floor(Math.random() * 10000) + 1,
                bolgeKodu: 'B-' + getRandomString(2).toUpperCase() + Math.floor(Math.random() * 10) + 1,
                sozlesmeDurumu: statusHtml,
                aktifDurumu: Math.random() < 0.5 ? '<i class="ri-check-line"></i>' : '<i class="ri-close-line"></i>'
            };
        }



        // 100 satır için örneğin tabloyu doldurma
        for (var i = 0; i < 100; i++) {
            var data = getRandomData();
            datatable.row.add([
                '<div class="form-check form-check-md d-flex align-items-center"><input class="form-check-input" type="checkbox" value="" id="checkebox-md"></div>',
                i + 1,
                data.sozlesmeNo,
                data.cari,
                data.tarih,
                data.baslangicTarih,
                data.bitisTarih,
                data.materyalKodu,
                data.sozlesmeMiktari,
                data.bolgeKodu,
                data.sozlesmeDurumu,
                data.aktifDurumu
            ]).draw(false);
        }

        $('.details-control').click(function () {
            var tr = $(this).closest('tr');
            var row = datatable.row(tr);

            if (row.child.isShown()) {
                // Detay gösterme alanı zaten açıksa kapat
                row.child.hide();
                tr.removeClass('shown');
            } else {
                // Detay gösterme alanını oluştur ve göster
                row.child(format(getRandomData2())).show();
                tr.addClass('shown');
            }
        });

        function applyRowDetails() {
            $('.details-control').off('click').on('click', function () {
                var tr = $(this).closest('tr');
                var row = datatable.row(tr);

                if (row.child.isShown()) {
                    // Detay gösterme alanı zaten açıksa kapat
                    row.child.hide();
                    tr.removeClass('shown');
                } else {
                    // Detay gösterme alanını oluştur ve göster
                    row.child(format(getRandomData2())).show();
                    tr.addClass('shown');
                }
            });
        }


        function getRandomData2() {
            var contractType = Math.random() < 0.5 ? 'Serbest Alım' : 'Tahhütlü Alım';
            var contractTypeBadge = contractType === 'Serbest Alım' ? '<span class="badge bg-success-transparent">' + contractType + '</span>' : '<span class="badge bg-primary-transparent">' + contractType + '</span>';

            var nakliye = Math.random() < 0.5 ? 'Konfrut' : 'Kendisine Ait';
            var nakliyeBadge = contractType === 'Konfrut' ? '<span class="badge bg-success-transparent">' + nakliye + '</span>' : '<span class="badge bg-primary-transparent">' + nakliye + '</span>';

            return {
                sozlesmeNo: Math.floor(Math.random() * 10000),
                cari: 'Cari ' + Math.floor(Math.random() * 100),
                tarih: new Date().toISOString().slice(0, 10),
                baslangicTarih: new Date().toISOString().slice(0, 10),
                bitisTarih: new Date(new Date().setDate(new Date().getDate() + Math.floor(Math.random() * 30))).toISOString().slice(0, 10),
                materyalKodu: 'MK' + Math.floor(Math.random() * 100),
                sozlesmeMiktari: Math.floor(Math.random() * 1000),
                bolgeKodu: 'B' + Math.floor(Math.random() * 10),
                sozlesmeDurumu: Math.floor(Math.random() * 2),
                aktifDurumu: Math.floor(Math.random() * 2),
                HammaddeFiyati: (Math.random() * 10).toFixed(2),
                StopajFiyati: (Math.random() * 10).toFixed(2),
                KomisyonFiyati: (Math.random() * 1).toFixed(2),
                YolFireOrani: (Math.random() * 5).toFixed(2),
                NakliyeFiyati: (Math.random() * 5).toFixed(2),
                KaydedenKullaniciKodu: getRandomName((Math.random() * 5).toFixed(2)),
                NakliyeSekli: nakliyeBadge,
                Notlar: 'Not ' + Math.floor(Math.random() * 100),
                SozlesmeTuru: contractTypeBadge
            };
        }


        // Detay gösterim fonksiyonu
        function format(data) {
            return '<tr class="detail-row">' +
                '<td colspan="16">' +
                '<table class="table table-bordered" style="width: 100%;">' +
                '<thead>' +
                '<tr>' +
                '<th>Hammadde Fiyatı</th>' +
                '<th>Stopaj Fiyatı</th>' +
                '<th>Komisyon Fiyatı</th>' +
                '<th>Yol Fire Oranı</th>' +
                '<th>Nakliye Fiyatı</th>' +
                '<th>ERP de Kaydeden Kullanıcı Kodu</th>' +
                '<th>Nakliye Şekli</th>' +
                '<th>Notlar</th>' +
                '<th>Sözleşme Türü</th>' +
                '</tr>' +
                '</thead>' +
                '<tbody>' +
                '<tr>' +
                '<td>' + data.HammaddeFiyati + '</td>' +
                '<td>' + data.StopajFiyati + '</td>' +
                '<td>' + data.KomisyonFiyati + '</td>' +
                '<td>' + data.YolFireOrani + '</td>' +
                '<td>' + data.NakliyeFiyati + '</td>' +
                '<td>' + data.KaydedenKullaniciKodu + '</td>' +
                '<td>' + data.NakliyeSekli + '</td>' +
                '<td>' + data.Notlar + '</td>' +
                '<td>' + data.SozlesmeTuru + '</td>' +
                '</tr>' +
                '</tbody>' +
                '</table>' +
                '</td>' +
                '</tr>';
        }

    </script>
}